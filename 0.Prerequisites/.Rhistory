#          ymax=Ymax, fill="red", alpha=0.3) +
geom_errorbar(width=.2, size=1, position=position_dodge(width = 0.6), stat="identity") +
geom_point(size=2, position=position_dodge(width = 0.6)) +
scale_x_discrete(limits=Limits, labels=Labels) + xlab("") +
scale_color_manual(values=c("black", "red")) +
geom_hline(yintercept = X$Intercept[X$Predominant_land_use=="Primary vegetation" & X$type=="empirical"], col="black", linetype="dashed") +
geom_hline(yintercept = X$Intercept[X$Predominant_land_use=="Primary vegetation" & X$type=="simulated"], col="red", linetype="dashed")
}
return(p)
}
Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + GGPoptions
m_FRic <- Run_MEM_LU(IPA, "FRic", SVPooled = TRUE)
m_FRic_sim <- Run_MEM_LU(IPA, "median_sim_FRic", SVPooled = TRUE)
pGEE1 <- Plot.mean.effect_SVPooled(m_FRic$Coef) + GGPoptions + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE1bis <- Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + GGPoptions
pGEE1
pGEE1bis
m_FDis <- Run_MEM_LU(IAW, "FDis", SVPooled = TRUE)
m_FDis_sim <- Run_MEM_LU(IPA, "median_sim_FDis", SVPooled = FALSE)
pGEE2 <- Plot.mean.effect_SVPooled(m_FDis$Coef) + GGPoptions + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + GGPoptions
m_FDis <- Run_MEM_LU(IAW, "FDis", SVPooled = TRUE)
m_FDis_sim <- Run_MEM_LU(IPA, "median_sim_FDis", SVPooled = TRUE)
pGEE2 <- Plot.mean.effect_SVPooled(m_FDis$Coef) + GGPoptions + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + GGPoptions
pGEE2
pGEE2bis
ggarrange(pGEE1,pGEE2, nrow=2)
pGEE1bis <- Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none")
pGEE1bis
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none")
pGEE2bis
ggarrange(pGEE1,pGEE2, nrow=2)
ggarrange(pGEE1bis,pGEE2bis, nrow=2)
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none")+ xlab("Mean effect ()95% CI")
pGEE1bis <- Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none") + xlab("Mean effect ()95% CI")
ggarrange(pGEE1bis,pGEE2bis, nrow=2)
pGEE1bis <- Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none") + ylab("Mean effect ()95% CI")
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none")+ ylab("Mean effect ()95% CI")
ggarrange(pGEE1bis,pGEE2bis, nrow=2)
ggarrange(pGEE1,pGEE2, nrow=2)
# ## with SV pooled for GEE presentation
m_FRic <- Run_MEM_LU(IPA, "FRic", SVPooled = TRUE)
m_FRic_sim <- Run_MEM_LU(IPA, "median_sim_FRic", SVPooled = TRUE)
pGEE1 <- Plot.mean.effect_SVPooled(m_FRic$Coef) + GGPoptions + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE1bis <- Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none") + ylab("Mean effect (95% CI)")
m_FDis <- Run_MEM_LU(IAW, "FDis", SVPooled = TRUE)
m_FDis_sim <- Run_MEM_LU(IPA, "median_sim_FDis", SVPooled = TRUE)
pGEE2 <- Plot.mean.effect_SVPooled(m_FDis$Coef) + GGPoptions + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + GGPoptions + theme(legend.position = "none")+ ylab("Mean effect (95% CI)")
ggarrange(pGEE1,pGEE2, nrow=2)
ggarrange(pGEE1bis,pGEE2bis, nrow=2)
# ## with SV pooled for GEE presentation
OPT <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=16, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=16),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=16),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=16))
m_FRic <- Run_MEM_LU(IPA, "FRic", SVPooled = TRUE)
m_FRic_sim <- Run_MEM_LU(IPA, "median_sim_FRic", SVPooled = TRUE)
pGEE1 <- Plot.mean.effect_SVPooled(m_FRic$Coef) + OPT + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE1bis <- Plot.effects_sim_obs_SVPooled(sim = m_FRic_sim$Coef, obs=m_FRic$Coef, slope=FALSE) + OPT + theme(legend.position = "none") + ylab("Mean effect (95% CI)")
m_FDis <- Run_MEM_LU(IAW, "FDis", SVPooled = TRUE)
m_FDis_sim <- Run_MEM_LU(IPA, "median_sim_FDis", SVPooled = TRUE)
pGEE2 <- Plot.mean.effect_SVPooled(m_FDis$Coef) + OPT + ylab("Mean effect (95% CI)") #+ ggtitle("FRic")
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + OPT + theme(legend.position = "none")+ ylab("Mean effect (95% CI)")
ggarrange(pGEE1,pGEE2, nrow=2)
ggarrange(pGEE1bis,pGEE2bis, nrow=2)
pGEE2bis <- Plot.effects_sim_obs_SVPooled(sim = m_FDis_sim$Coef, obs=m_FDis$Coef, slope=FALSE) + OPT + ylab("Mean effect (95% CI)")# + theme(legend.position = "none")
pGEE2bis
library(dplyr)
library(ggplot2)
library(ggpubr)
library(lme4)
source("Functions_to_fit_MEM.R")
source("Functions_Changes_trait_values.R")
Res <- read.csv("../Results/9.Changes_trait_values/Results.csv") %>% Clean()
Res_transf <- read.csv("../Results/9.Changes_trait_values/Results_transf.csv") %>% Clean()
mammals <- read.csv("../Results/9.Changes_trait_values/Results_mammals.csv") %>% Clean()
birds <- read.csv("../Results/9.Changes_trait_values/Results_birds.csv") %>% Clean()
amphibians <- read.csv("../Results/9.Changes_trait_values/Results_amphibians.csv") %>% Clean()
reptiles <- read.csv("../Results/9.Changes_trait_values/Results_reptiles.csv") %>% Clean()
Body_mass_model <- Run_MEM_LU(Res, "Mean_BM_log10", SVPooled = FALSE)
Body_mass_model_T <- Run_MEM_LU(Res_transf, "Mean_BM_log10", SVPooled = FALSE)
Longevity_model <- Run_MEM_LU(Res, "Mean_longevity_log10", SVPooled = FALSE)
Longevity_model_T <- Run_MEM_LU(Res_transf, "Mean_longevity_log10", SVPooled = FALSE)
HB_model <- Run_MEM_LU(Res, "Mean_HB_sqrt", SVPooled = FALSE)
HB_model_T <- Run_MEM_LU(Res_transf, "Mean_HB_sqrt", SVPooled = FALSE)
PropNoc_model <- Run_MEM_LU(Res, "Prop_DA_Nocturnal", SVPooled = FALSE)
PropGeneralist_model <- Run_MEM_LU(Res, "Prop_Generalist", SVPooled = FALSE)
PropSpecialist_model <- Run_MEM_LU(Res, "Prop_Specialist", SVPooled = FALSE)
Prop_Omnivores_model <- Run_MEM_LU(Res, "Prop_Omnivores", SVPooled = FALSE)
Prop_Carnivores_model <- Run_MEM_LU(Res, "Prop_Carnivores", SVPooled = FALSE)
Prop_Herbovires_model <- Run_MEM_LU(Res, "Prop_Herbivores", SVPooled = FALSE)
## results not transformed
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity"),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth"),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat generalists"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat specialists"),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Porportion of nocturnals"),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Proportion of omnivores"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Proportion of carnivores"),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Proportion of herbivores"))
p
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat generalists"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat specialists")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Porportion of nocturnals")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Proportion of omnivores"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Proportion of carnivores")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Proportion of herbivores")+ ylab(""))
p
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass") + ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat generalists")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat specialists")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Porportion of nocturnals")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Proportion of omnivores")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Proportion of carnivores")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Proportion of herbivores")+ ylab(""))
Res$Mean_BM_log10
Res$Mean_BM_log10 <- Res$Mean_BM_log10/1000 # kg
Body_mass_model <- Run_MEM_LU(Res, "Mean_BM_log10", SVPooled = FALSE)
## results not transformed
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat generalists")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat specialists")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Porportion of nocturnals")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Proportion of omnivores")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Proportion of carnivores")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Proportion of herbivores")+ ylab(""))
p
Res$Mean_longevity_log10 <- Res$Mean_longevity_log10/365.25 # years
Longevity_model <- Run_MEM_LU(Res, "Mean_longevity_log10", SVPooled = FALSE)
## results not transformed
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat generalists")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Porportion of habitat specialists")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Porportion of nocturnals")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Proportion of omnivores")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Proportion of carnivores")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Proportion of herbivores")+ ylab(""))
p
## results not transformed
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity (years)") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Habitat generalism (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Habitat specialism (%)")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Nocturnality (%)")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Omnivory (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Carnivory (%)")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Herbivory (%)")+ ylab(""))
p
Res$Predominant_land_use <- as.character(Res$Predominant_land_use)
Body_mass_model <- Run_MEM_LU(Res, "Mean_BM_log10", SVPooled = TRUE)
Res$Mean_BM_log10 <- Res$Mean_BM_log10/1000 # kg
Res$Predominant_land_use <- as.character(Res$Predominant_land_use)
Body_mass_model <- Run_MEM_LU(Res, "Mean_BM_log10", SVPooled = TRUE)
Body_mass_model_T <- Run_MEM_LU(Res_transf, "Mean_BM_log10", SVPooled = FALSE)
Res$Mean_longevity_log10 <- Res$Mean_longevity_log10/365.25 # years
Longevity_model <- Run_MEM_LU(Res, "Mean_longevity_log10", SVPooled = TRUE)
Longevity_model_T <- Run_MEM_LU(Res_transf, "Mean_longevity_log10", SVPooled = FALSE)
HB_model <- Run_MEM_LU(Res, "Mean_HB_sqrt", SVPooled = TRUE)
HB_model_T <- Run_MEM_LU(Res_transf, "Mean_HB_sqrt", SVPooled = FALSE)
PropNoc_model <- Run_MEM_LU(Res, "Prop_DA_Nocturnal", SVPooled = TRUE)
PropGeneralist_model <- Run_MEM_LU(Res, "Prop_Generalist", SVPooled = TRUE)
PropSpecialist_model <- Run_MEM_LU(Res, "Prop_Specialist", SVPooled = TRUE)
Prop_Omnivores_model <- Run_MEM_LU(Res, "Prop_Omnivores", SVPooled = TRUE)
Prop_Carnivores_model <- Run_MEM_LU(Res, "Prop_Carnivores", SVPooled = TRUE)
Prop_Herbovires_model <- Run_MEM_LU(Res, "Prop_Herbivores", SVPooled = TRUE)
## results not transformed
p= ggarrange(Plot.mean.effect(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity (years)") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Habitat generalism (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Habitat specialism (%)")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Nocturnality (%)")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Omnivory (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Carnivory (%)")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Herbivory (%)")+ ylab(""))
## results not transformed
p= ggarrange(Plot.mean.effect_SVPooled(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity (years)") + ylab(""),
Plot.mean.effect(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Habitat generalism (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Habitat specialism (%)")+ ylab(""),
Plot.mean.effect(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Nocturnality (%)")+ ylab(""),
Plot.mean.effect(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Omnivory (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Carnivory (%)")+ ylab(""),
Plot.mean.effect(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Herbivory (%)")+ ylab(""))
## results not transformed
p= ggarrange(Plot.mean.effect_SVPooled(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect_SVPooled(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity (years)") + ylab(""),
Plot.mean.effect_SVPooled(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect_SVPooled(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Habitat generalism (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect_SVPooled(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Habitat specialism (%)")+ ylab(""),
Plot.mean.effect_SVPooled(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Nocturnality (%)")+ ylab(""),
Plot.mean.effect_SVPooled(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Omnivory (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect_SVPooled(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Carnivory (%)")+ ylab(""),
Plot.mean.effect_SVPooled(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Herbivory (%)")+ ylab(""))
p
Res <- read.csv("../Results/9.Changes_trait_values/Results.csv") %>% Clean()
Res$Mean_BM_log10 <- Res$Mean_BM_log10/1000 # kg
Res$Predominant_land_use <- as.character(Res$Predominant_land_use)
Body_mass_model <- Run_MEM_LU(Res, "Mean_BM_log10", SVPooled = TRUE)
Body_mass_model_T <- Run_MEM_LU(Res_transf, "Mean_BM_log10", SVPooled = FALSE)
Res$Mean_longevity_log10 <- Res$Mean_longevity_log10/365.25 # years
Longevity_model <- Run_MEM_LU(Res, "Mean_longevity_log10", SVPooled = TRUE)
Longevity_model_T <- Run_MEM_LU(Res_transf, "Mean_longevity_log10", SVPooled = FALSE)
HB_model <- Run_MEM_LU(Res, "Mean_HB_sqrt", SVPooled = TRUE)
HB_model_T <- Run_MEM_LU(Res_transf, "Mean_HB_sqrt", SVPooled = FALSE)
PropNoc_model <- Run_MEM_LU(Res, "Prop_DA_Nocturnal", SVPooled = TRUE)
PropGeneralist_model <- Run_MEM_LU(Res, "Prop_Generalist", SVPooled = TRUE)
PropSpecialist_model <- Run_MEM_LU(Res, "Prop_Specialist", SVPooled = TRUE)
Prop_Omnivores_model <- Run_MEM_LU(Res, "Prop_Omnivores", SVPooled = TRUE)
Prop_Carnivores_model <- Run_MEM_LU(Res, "Prop_Carnivores", SVPooled = TRUE)
Prop_Herbovires_model <- Run_MEM_LU(Res, "Prop_Herbivores", SVPooled = TRUE)
## results not transformed
p= ggarrange(Plot.mean.effect_SVPooled(X = Body_mass_model$Coef) + GGPoptions + ggtitle("Body mass (kg)") + ylab("Mean effect (95% CI)"),
Plot.mean.effect_SVPooled(X = Longevity_model$Coef) + GGPoptions + ggtitle("Longevity (years)") + ylab(""),
Plot.mean.effect_SVPooled(X = HB_model$Coef) + GGPoptions + ggtitle("Habitat breadth")+ ylab(""),
Plot.mean.effect_SVPooled(X = PropGeneralist_model$Coef) + GGPoptions + ggtitle("Habitat generalism (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect_SVPooled(X = PropSpecialist_model$Coef) + GGPoptions + ggtitle("Habitat specialism (%)")+ ylab(""),
Plot.mean.effect_SVPooled(X = PropNoc_model$Coef) + GGPoptions + ggtitle("Nocturnality (%)")+ ylab(""),
Plot.mean.effect_SVPooled(X = Prop_Omnivores_model$Coef) + GGPoptions + ggtitle("Omnivory (%)")+ ylab("Mean effect (95% CI)"),
Plot.mean.effect_SVPooled(X = Prop_Carnivores_model$Coef) + GGPoptions + ggtitle("Carnivory (%)")+ ylab(""),
Plot.mean.effect_SVPooled(X = Prop_Herbovires_model$Coef) + GGPoptions + ggtitle("Herbivory (%)")+ ylab(""))
p
ggsave(p, filename="../Results/9.Changes_trait_values/Not_transformed_talk.png", width = 13, height=8, res=800)
ggsave(p, filename="../Results/9.Changes_trait_values/Not_transformed_talk.png", width = 13, height=8, dpi=800)
ggsave(p, filename="../Results/9.Changes_trait_values/Not_transformed_talk.png", width = 13, height=8, dpi=1000)
setwd("../../1.Trait_compilation/Code/0.Prerequisites")
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##
##                AIM: PREPARING HABITAT DATA FROM IUCN FILES FOR FURTHER TRAIT COMPILATION               ##
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##
X <- c("grid", "gridExtra", "ggpubr", "dplyr", "lattice", "stringr")
invisible(lapply(X, library, character.only=TRUE)); rm(X)
## Data corrected for taxonomy
IUCN_mammal_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_mammals.csv")
IUCN_amphibian_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_amphibians.csv")
IUCN_bird_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_birds.csv")
IUCN_reptile_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_reptiles.csv")
# all <- rbind(IUCN_amphibian_C, IUCN_bird_C, IUCN_mammal_C, IUCN_reptile_C)
#
# all$Major.importance <- as.character(all$Major.importance)
# all$Major.importance[is.na(all$Major.importance)] <- "Unknown"
#
# all$Suitability <- as.character(all$Suitability)
# all$Suitability[is.na(all$Suitability)] <- "Unknown"
#
# table( all$Suitability, all$Major.importance)
IUCN_amphibian_C$Best_guess_binomial %<>% as.character()
IUCN_mammal_C$Best_guess_binomial %<>% as.character()
IUCN_bird_C$Best_guess_binomial %<>% as.character()
IUCN_reptile_C$Best_guess_binomial %<>% as.character()
## Data uncorrected for taxonomy
IUCN_mammal_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Mammals_20180726.csv", sep=",")
IUCN_amphibian_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Amphibians_20180726.csv", sep=",")
IUCN_bird_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Birds_20180726.csv", sep=",")
IUCN_reptile_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Reptiles_20180726.csv", sep=",")
colnames(IUCN_mammal_UN)[7] <- "Best_guess_binomial"
colnames(IUCN_amphibian_UN)[7] <- "Best_guess_binomial"
colnames(IUCN_reptile_UN)[7] <- "Best_guess_binomial"
colnames(IUCN_bird_UN)[7] <- "Best_guess_binomial"
IUCN_amphibian_UN$Best_guess_binomial %<>% as.character()
IUCN_mammal_UN$Best_guess_binomial %<>% as.character()
IUCN_bird_UN$Best_guess_binomial %<>% as.character()
IUCN_reptile_UN$Best_guess_binomial %<>% as.character()
.Set_H_type <- function(IUCN_data) {
Func <- function(X) {
x <- strsplit(as.character(X), "[.]") %>% unlist
x <- x[1] %>% as.numeric(); return(x)}
IUCN_data$Code <- sapply(IUCN_data$code, Func)
IUCN_data <- IUCN_data %>% mutate(Affinity=ifelse(Code==1, "Forest",
ifelse(Code==2, "Savanna",
ifelse(Code==3, "Shrubland",
ifelse(Code==4, "Grassland",
ifelse(Code==5, "Wetland",
ifelse(Code==6, "Rocky areas",
ifelse(Code==7, "Caves and subterranean",
ifelse(Code==8, "Desert",
ifelse(Code==9|Code==10|Code==11, "Marine",
ifelse(Code==12|Code==13, "Marine intertidal or coastal/supratidal",
ifelse(Code==14|Code==15, "Artificial",
ifelse(Code==16, "Introduced vegetation",
ifelse(Code==17|Code==18, "Other/unknown", NA))))))))))))))
return(IUCN_data)
}
IUCN_Habitat_calc <- function(IUCN_Habitat, With_weights) {
IUCN_Habitat <- IUCN_Habitat %>%
mutate(Suitability=as.character(Suitability)) %>%
mutate(Suitability=ifelse(is.na(Suitability), "Unknown", Suitability))
IUCN_Habitat <- IUCN_Habitat %>%
mutate(Major.importance=as.character(Major.importance)) %>%
mutate(Major.importance=ifelse(is.na(Major.importance), "Unknown", Major.importance))
Species <- unique(IUCN_Habitat$Best_guess_binomial) %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial") %>%
mutate(Habitat_breadth_IUCN=NA) %>%
mutate(Specialisation=NA)
for (i in 1:nrow(Species)) {
# Calculation of Habitat breadth
s <- subset(IUCN_Habitat, Best_guess_binomial==Species$Best_guess_binomial[i])
tbl <- table(s$Suitability, s$Major.importance) %>%
as.data.frame() %>%
setNames(., c("Suitability", "Major.importance", "N"))
if(With_weights){
tbl <- tbl %>%
mutate(Weight=ifelse((Suitability=="Suitable"| Suitability=="Unknown") & (Major.importance=="Yes"|Major.importance=="Unknown"), 1,
ifelse(Suitability=="Suitable" & Major.importance=="No", 0.5, 0.3))) %>%
mutate(Score=N*Weight)
}
if(!With_weights) {
tbl <- tbl %>%
mutate(Weight=1) %>%
mutate(Score=N*Weight)
}
Species$Habitat_breadth_IUCN[i] <- sum(tbl$Score)
# Assigning a specialisation on Natural habitats (if no artificial habitats are suitable)
if(any(s$Affinity=="Artificial" & (s$Suitability=="Suitable"|s$Suitability=="Unknown"), na.rm=TRUE)) {
Species$Specialisation[i] <- "Generalist"}
else{
if(any(s$Affinity=="Other/unknown" & (s$Suitability=="Suitable"|s$Suitability=="Unknown"), na.rm=TRUE)) {
Species$Specialisation[i] <- NA}
else {Species$Specialisation[i] <- "Natural habitat specialist"}
}
}
return(Species)
}
IUCN_Habitat_calc <- function(IUCN_Habitat, With_weights) {
IUCN_Habitat <- IUCN_Habitat %>%
mutate(Suitability=as.character(Suitability)) %>%
mutate(Suitability=ifelse(is.na(Suitability), "Unknown", Suitability))
IUCN_Habitat <- IUCN_Habitat %>%
mutate(Major.importance=as.character(Major.importance)) %>%
mutate(Major.importance=ifelse(is.na(Major.importance), "Unknown", Major.importance))
Species <- unique(IUCN_Habitat$Best_guess_binomial) %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial") %>%
mutate(Habitat_breadth_IUCN=NA) %>%
mutate(Specialisation=NA)
for (i in 1:nrow(Species)) {
# Calculation of Habitat breadth
s <- subset(IUCN_Habitat, Best_guess_binomial==Species$Best_guess_binomial[i])
tbl <- table(s$Suitability, s$Major.importance) %>%
as.data.frame() %>%
setNames(., c("Suitability", "Major.importance", "N"))
# if(With_weights){
#     tbl <- tbl %>%
#   mutate(Weight=ifelse((Suitability=="Suitable"| Suitability=="Unknown") & (Major.importance=="Yes"|Major.importance=="Unknown"), 1,
#                        ifelse(Suitability=="Suitable" & Major.importance=="No", 0.5, 0.3))) %>%
#   mutate(Score=N*Weight)
# }
if(With_weights){
browser()
tbl <- tbl %>%
mutate(Weight=ifelse((Suitability=="Suitable") & (Major.importance=="Yes"), 1,
ifelse(Suitability=="Suitable" & (Major.importance=="No"|Major.importance=="Unknown"), 0.5,
ifelse(Suitability=="Unknown" & Major.importance=="Unknown", 0.5, 0.3)))) %>%
mutate(Score=N*Weight)
}
if(!With_weights) {
tbl <- tbl %>%
mutate(Weight=1) %>%
mutate(Score=N*Weight)
}
Species$Habitat_breadth_IUCN[i] <- sum(tbl$Score)
# Assigning a specialisation on Natural habitats (if no artificial habitats are suitable)
if(any(s$Affinity=="Artificial" & (s$Suitability=="Suitable"|s$Suitability=="Unknown"), na.rm=TRUE)) {
Species$Specialisation[i] <- "Generalist"}
else{
if(any(s$Affinity=="Other/unknown" & (s$Suitability=="Suitable"|s$Suitability=="Unknown"), na.rm=TRUE)) {
Species$Specialisation[i] <- NA}
else {Species$Specialisation[i] <- "Natural habitat specialist"}
}
}
return(Species)
}
Habitat_as_binary <-  function(Habitat_data, IUCN_data){
Types <- c("Forest", "Savanna", "Shrubland", "Grassland", "Wetland", "Rocky areas", "Caves and subterranean", "Desert",
"Marine", "Marine intertidal or coastal/supratidal", "Artificial", "Introduced vegetation", "Other/Unknown")
Habitat_data[, Types] <- NA
for (i in 1:nrow(Habitat_data)) {
s <- subset(IUCN_data, Best_guess_binomial==Habitat_data$Best_guess_binomial[i])
for (j in 1:length(Types)) {
if (any(s$Affinity==Types[j])) {
Habitat_data[i, Types[j]] <- 1
}
else {
Habitat_data[i, Types[j]] <- 0
}
}
}
return(Habitat_data)
}
## Amphibians
IUCN_amphibian_C %<>% .Set_H_type()
Habitat_amphibian_C <- IUCN_Habitat_calc(IUCN_amphibian_C, TRUE)
tbl
tbl
IUCN_Habitat_calc <- function(IUCN_Habitat, With_weights) {
IUCN_Habitat <- IUCN_Habitat %>%
mutate(Suitability=as.character(Suitability)) %>%
mutate(Suitability=ifelse(is.na(Suitability), "Unknown", Suitability))
IUCN_Habitat <- IUCN_Habitat %>%
mutate(Major.importance=as.character(Major.importance)) %>%
mutate(Major.importance=ifelse(is.na(Major.importance), "Unknown", Major.importance))
Species <- unique(IUCN_Habitat$Best_guess_binomial) %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial") %>%
mutate(Habitat_breadth_IUCN=NA) %>%
mutate(Specialisation=NA)
for (i in 1:nrow(Species)) {
# Calculation of Habitat breadth
s <- subset(IUCN_Habitat, Best_guess_binomial==Species$Best_guess_binomial[i])
tbl <- table(s$Suitability, s$Major.importance) %>%
as.data.frame() %>%
setNames(., c("Suitability", "Major.importance", "N"))
# if(With_weights){
#     tbl <- tbl %>%
#   mutate(Weight=ifelse((Suitability=="Suitable"| Suitability=="Unknown") & (Major.importance=="Yes"|Major.importance=="Unknown"), 1,
#                        ifelse(Suitability=="Suitable" & Major.importance=="No", 0.5, 0.3))) %>%
#   mutate(Score=N*Weight)
# }
if(With_weights){
tbl <- tbl %>%
mutate(Weight=ifelse((Suitability=="Suitable") & (Major.importance=="Yes"), 1,
ifelse(Suitability=="Suitable" & (Major.importance=="No"|Major.importance=="Unknown"), 0.5,
ifelse(Suitability=="Unknown" & Major.importance=="Unknown", 0.5, 0.3)))) %>%
mutate(Score=N*Weight)
}
if(!With_weights) {
tbl <- tbl %>%
mutate(Weight=1) %>%
mutate(Score=N*Weight)
}
Species$Habitat_breadth_IUCN[i] <- sum(tbl$Score)
# Assigning a specialisation on Natural habitats (if no artificial habitats are suitable)
if(any(s$Affinity=="Artificial" & (s$Suitability=="Suitable"|s$Suitability=="Unknown"), na.rm=TRUE)) {
Species$Specialisation[i] <- "Generalist"}
else{
if(any(s$Affinity=="Other/unknown" & (s$Suitability=="Suitable"|s$Suitability=="Unknown"), na.rm=TRUE)) {
Species$Specialisation[i] <- NA}
else {Species$Specialisation[i] <- "Natural habitat specialist"}
}
}
return(Species)
}
Habitat_amphibian_C <- IUCN_Habitat_calc(IUCN_amphibian_C, TRUE)
Habitat_amphibian_C <- Habitat_as_binary(Habitat_amphibian_C, IUCN_amphibian_C)
View(Habitat_amphibian_C)
IUCN_amphibian_UN %<>% .Set_H_type()
Habitat_amphibian_UN <- IUCN_Habitat_calc(IUCN_amphibian_UN, TRUE)
Habitat_amphibian_UN <- Habitat_as_binary(Habitat_amphibian_UN, IUCN_amphibian_UN)
## Birds
IUCN_bird_C %<>% .Set_H_type()
Habitat_bird_C <- IUCN_Habitat_calc(IUCN_bird_C, TRUE)
Habitat_bird_C <- Habitat_as_binary(Habitat_bird_C, IUCN_bird_C)
IUCN_bird_UN %<>% .Set_H_type()
Habitat_bird_UN <- IUCN_Habitat_calc(IUCN_bird_UN, TRUE)
Habitat_bird_UN <- Habitat_as_binary(Habitat_bird_UN, IUCN_bird_UN)
## Reptiles
IUCN_reptile_C %<>% .Set_H_type()
Habitat_reptile_C <- IUCN_Habitat_calc(IUCN_reptile_C, TRUE)
Habitat_reptile_C <- Habitat_as_binary(Habitat_reptile_C, IUCN_reptile_C)
IUCN_reptile_UN %<>% .Set_H_type()
Habitat_reptile_UN <- IUCN_Habitat_calc(IUCN_reptile_UN, TRUE)
Habitat_reptile_UN <- Habitat_as_binary(Habitat_reptile_UN, IUCN_reptile_UN)
## Mammals
IUCN_mammal_C %<>% .Set_H_type()
Habitat_mammal_C <- IUCN_Habitat_calc(IUCN_mammal_C, TRUE)
Habitat_mammal_C <- Habitat_as_binary(Habitat_mammal_C, IUCN_mammal_C)
IUCN_mammal_UN %<>% .Set_H_type()
Habitat_mammal_UN <- IUCN_Habitat_calc(IUCN_mammal_UN, TRUE)
Habitat_mammal_UN <- Habitat_as_binary(Habitat_mammal_UN, IUCN_mammal_UN)
View(Habitat_amphibian_C)
Habitat_amphibian_UN <- Habitat_amphibian_UN[order(Habitat_amphibian_UN$Best_guess_binomial),] %>%
mutate(Class=="Amphibia")
Habitat_amphibian_UN <- Habitat_amphibian_UN[order(Habitat_amphibian_UN$Best_guess_binomial),] %>%
mutate(Class="Amphibia")
View(Habitat_amphibian_C)
View(Habitat_amphibian_UN)
Habitat_bird_UN <- Habitat_bird_UN[order(Habitat_bird_UN$Best_guess_binomial),] %>%
mutate(Class="Aves")
Habitat_mammal_UN <- Habitat_mammal_UN[order(Habitat_mammal_UN$Best_guess_binomial),] %>%
mutate(Class="Mammalia")
Habitat_reptile_UN <- Habitat_reptile_UN[order(Habitat_reptile_UN$Best_guess_binomial),] %>%
mutate(Class="Reptilia")
Habitat_var <- rbind(Habitat_amphibian_UN, Habitat_bird_UN, Habitat_mammal_UN, Habitat_reptile_UN)
View(Habitat_var)
Habitat_var <- Habitat_var[c(17, 1:16)]
View(Habitat_var)
Habitat_var$Best_guess_binomial <- tolower(Habitat_var$Best_guess_binomial)
library(stringr)
Habitat_var <- rbind(Habitat_amphibian_UN, Habitat_bird_UN, Habitat_mammal_UN, Habitat_reptile_UN)
Habitat_var <- Habitat_var[c(17, 1:16)]
word(Habitat_var$Best_guess_binomial,1)
paste(word(Habitat_var$Best_guess_binomial,1), tolower(word(Habitat_var$Best_guess_binomial, 2)))
Habitat_var$Best_guess_binomial <- paste(word(Habitat_var$Best_guess_binomial,1), tolower(word(Habitat_var$Best_guess_binomial, 2)))
length(unique(Habitat_var$Best_guess_binomial))
write.csv(Habitat_var, "../../../../../../Desktop/Habitat_breadth.csv", row.names = FALSE)
