citation(package = 'rredlist')
citation(package = 'ape')
citation(package = 'phytools')
citation(package = 'FDcalc')
install_github("davidnipperess/PDcalc")
library(devtools)
install_github("davidnipperess/PDcalc")
install_github("davidnipperess/PDcalc", force=TRUE)
citation(package = 'FDcalc')
citation(package = 'PDcalc')
citation(package = 'mice')
install.packages("mice")
citation(package = 'mice')
citation(package = 'missForest')
print(<missforest>, bibtex=TRUE)
print(missForest, bibtex=TRUE)
print('missForest', bibtex=TRUE)
citation(package = 'phylopars')
?cor
## Relationship between global range size of species and number of traits sampled
library(dplyr)
library(ggplot2)
library(ggpubr)
setwd("../../1.Trait_compilation/Code/3.Global_gaps_traits/")
GGPoptions <- theme_classic()+ theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=12, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,3,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,5,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=12))
RS_mammals <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Mammals.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_birds <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Birds.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_reptiles <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Reptiles.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_amphibians <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Amphibians.csv") %>%
select(Best_guess_binomial, Range_size_m2)
Completeness_mammals <- read.csv("../../Results/3.Global_gaps_traits/Completeness_mammals.csv")
Completeness_birds <- read.csv("../../Results/3.Global_gaps_traits/Completeness_birds.csv")
Completeness_reptiles <- read.csv("../../Results/3.Global_gaps_traits/Completeness_reptiles.csv")
Completeness_amphibians <- read.csv("../../Results/3.Global_gaps_traits/Completeness_amphibians.csv")
Mammals <- merge(RS_mammals, Completeness_mammals) %>% mutate(Class="Mammals")
Birds <- merge(RS_birds, Completeness_birds)%>% mutate(Class="Birds")
Reptiles <- merge(RS_reptiles, Completeness_reptiles)%>% mutate(Class="Reptiles")
Amphibians <- merge(RS_amphibians, Completeness_amphibians)%>% mutate(Class="Amphibians")
Data <- rbind(Mammals, Birds, Reptiles, Amphibians)
Data$log_RS <- log(Data$Range_size_m2)
Data$N_predictors <- as.factor(Data$N_predictors)
Data$N_target <- as.factor(Data$N_target)
# ## Poisson models for each class
Data <- Data %>% filter(!is.na(log_RS))
Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class, family="poisson", data=Data))
Summary
Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class + log_RS:Class, family="poisson", data=Data))
Summary
Model_pred <- predict(model, type="response")
p2 <- ggplot(Data, aes(x = log_RS, y = Model_pred, group=Class, col=Class)) +
geom_point(aes(y = N_predictors), alpha=.2, size=0.1, position=position_jitter(h=.1), col="grey") +
geom_line(size = 1) + GGPoptions + xlab(expression("Range size (log m"^2*")")) + ylab("Predicted numbers of known traits")
p2
# Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class, family="poisson", data=Data))
Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class + log_RS:Class, family="poisson", data=Data))
Model_pred <- predict(model, type="response")
p2 <- ggplot(Data, aes(x = log_RS, y = Model_pred, group=Class, col=Class)) +
geom_point(aes(y = N_predictors), alpha=.2, size=0.1, position=position_jitter(h=.1), col="grey") +
geom_line(size = 1) + GGPoptions + xlab(expression("Range size (log m"^2*")")) + ylab("Predicted numbers of known traits")
# Test for goodness of fit: should not be sgnificant if the model fits the data well
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
# Test for effect of class
## update model for a  model dropping class
m0 <- update(model, . ~ . - Class)
## test model differences with chi square test
anova(m0, model, test="Chisq")
p1 <- ggplot(Data, aes(x=N_predictors,y=log_RS, fill=Class)) +
geom_boxplot(outlier.size =0.5, outlier.colour = "lightblue") +
facet_wrap(~Class) + coord_flip() + GGPoptions +
xlab(expression("Range size (log m"^2*")")) + ylab("Number of sampled traits")
p <- ggarrange(p1+ theme(legend.title = element_blank()),p2, widths = c(0.5,0.5), labels = c("A", "B"), common.legend = TRUE, legend = "right")
p
ggsave(p, filename="../../Results/Plots/Trait_missing_values/Poisson_model_predictions.pdf", width=10, height=5)
ggsave(p, filename="../../Results/Plots/Trait_missing_values/Poisson_model_predictions.pdf", width=10, height=5)
Summary
as.data.frame(Summary)
as.data.frame(Summary)
saveRDS(Summary, "../../Results/3.Global_gaps_traits/Poisson_model_results.rds")
write.table(Summary, "../../Results/3.Global_gaps_traits/Poisson_model_results-t")
Summary$coefficients
save.csv(Summary$coefficients, "../../Results/3.Global_gaps_traits/Poisson_model_coefficients.csv")
write.csv(Summary$coefficients, "../../Results/3.Global_gaps_traits/Poisson_model_coefficients.csv")
Summary
?glm
library(dplyr)
library(ggplot2)
library(ggpubr)
setwd("../../1.Trait_compilation/Code/3.Global_gaps_traits/")
GGPoptions <- theme_classic()+ theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=12, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,3,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,5,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=12))
## Load range size data and completeness
RS_mammals <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Mammals.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_birds <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Birds.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_reptiles <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Reptiles.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_amphibians <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Amphibians.csv") %>%
select(Best_guess_binomial, Range_size_m2)
Completeness_mammals <- read.csv("../../Results/3.Global_gaps_traits/Completeness_mammals.csv")
Completeness_birds <- read.csv("../../Results/3.Global_gaps_traits/Completeness_birds.csv")
Completeness_reptiles <- read.csv("../../Results/3.Global_gaps_traits/Completeness_reptiles.csv")
Completeness_amphibians <- read.csv("../../Results/3.Global_gaps_traits/Completeness_amphibians.csv")
Mammals <- merge(RS_mammals, Completeness_mammals) %>% mutate(Class="Mammals")
Birds <- merge(RS_birds, Completeness_birds)%>% mutate(Class="Birds")
Reptiles <- merge(RS_reptiles, Completeness_reptiles)%>% mutate(Class="Reptiles")
Amphibians <- merge(RS_amphibians, Completeness_amphibians)%>% mutate(Class="Amphibians")
Data <- rbind(Mammals, Birds, Reptiles, Amphibians)
Data$log_RS <- log(Data$Range_size_m2)
Data$N_predictors <- as.factor(Data$N_predictors)
Data$N_target <- as.factor(Data$N_target)
p1 <- ggplot(Data, aes(x=N_predictors,y=log_RS, fill=Class)) +
geom_boxplot(outlier.size =0.5, outlier.colour = "lightblue") +
facet_wrap(~Class) + coord_flip() + GGPoptions +
xlab(expression("Range size (log m"^2*")")) + ylab("Number of sampled traits")
# ## Poisson models for each class
Data <- Data %>% filter(!is.na(log_RS))
# Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class, family="poisson", data=Data))
Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class + log_RS:Class, family="poisson", data=Data))
Summary
model$deviance
model$df.residual
# Test for goodness of fit: should not be sgnificant if the model fits the data well
pchisq(model$deviance, df=model$df.residual, lower.tail=FALSE)
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
# Test for goodness of fit: should not be sgnificant if the model fits the data well
pchisq(model$deviance, df=model$df.residual, lower.tail=FALSE)
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
# # Test for effect of class
# ## update model for a  model dropping class
# m0 <- update(model, . ~ . - Class)
m0 <- glm(as.numeric(N_predictors) ~ log_RS, family="poisson", data=Data))
# # Test for effect of class
# ## update model for a  model dropping class
# m0 <- update(model, . ~ . - Class)
m0 <- glm(as.numeric(N_predictors) ~ log_RS, family="poisson", data=Data)
anova(m0, model, test="Chisq")
Summary
ssr <- sum(residuals(model, type="pearson")^2)
pchisq(ssr, 99999)
14444/ 27105
# Test for goodness of fit: should not be sgnificant if the model fits the data well
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
pchisq(deviance, df.residual, lower.tail=FALSE)
pchisq(model$deviance, model$df.residual, lower.tail=FALSE)
pchisq(model$deviance, model$df.residual, lower.tail=FALSE, log.p = FALSE)
pchisq(model$deviance, model$df.residual, lower.tail=FALSE, log.p = TRUE)
?pchisq
library(vcd)
RSiteSearch("goodness fit Poisson model")
plot(model)
model$residuals
model$deviance
# Test for goodness of fit: should not be sgnificant if the model fits the data well
# estimate of overdispersion residual deviance/residual df
model$deviance / model$df.residual
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
pchisq(9184.3, 428, lower.tail=FALSE)
# Test for goodness of fit: should not be sgnificant if the model fits the data well
# estimate of overdispersion residual deviance/residual df (oversdispersion if this is significantly greater than 1)
model$deviance / model$df.residual
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
pchisq(model$deviance, model$df.residual, lower.tail=FALSE)
model
with(model, cbind(res.deviance = deviance, df = df.residual,
p = pchisq(deviance, df.residual, lower.tail=FALSE)))
p
p1 <- ggplot(Data, aes(x=N_predictors,y=log_RS, fill=Class)) +
geom_boxplot(outlier.size =0.5, outlier.colour = "lightblue") +
facet_wrap(~Class) + coord_flip() + GGPoptions +
xlab(expression("Range size (log m"^2*")")) + ylab("Number of sampled traits")
Model_pred <- predict(model, type="response")
p2 <- ggplot(Data, aes(x = log_RS, y = Model_pred, group=Class, col=Class)) +
geom_point(aes(y = N_predictors), alpha=.2, size=0.1, position=position_jitter(h=.1), col="grey") +
geom_line(size = 1) + GGPoptions + xlab(expression("Range size (log m"^2*")")) + ylab("Predicted numbers of known traits")
p1
p1 <- ggplot(Data, aes(x=N_predictors,y=log_RS, fill=Class)) +
geom_boxplot(outlier.size =0.5, outlier.colour = "lightblue") +
facet_wrap(~Class) + coord_flip() + GGPoptions +
ylab(expression("Range size (log m"^2*")")) + xlab("Number of sampled traits")
p2 <- ggplot(Data, aes(x = log_RS, y = Model_pred, group=Class, col=Class)) +
geom_point(aes(y = N_predictors), alpha=.2, size=0.1, position=position_jitter(h=.1), col="grey") +
geom_line(size = 1) + GGPoptions + xlab(expression("Range size (log m"^2*")")) + ylab("Predicted numbers of known traits")
p <- ggarrange(p1+ theme(legend.title = element_blank()),p2, widths = c(0.5,0.5), labels = c("A", "B"), common.legend = TRUE, legend = "right")
ggsave(p, filename="../../Results/Plots/Trait_missing_values/Poisson_model_predictions.pdf", width=10, height=5)
library(dplyr)
library(ggplot2)
library(ggpubr)
setwd("../../1.Trait_compilation/Code/3.Global_gaps_traits/")
GGPoptions <- theme_classic()+ theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=12, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,3,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,5,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=12))
## Load range size data and completeness
RS_mammals <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Mammals.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_birds <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Birds.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_reptiles <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Reptiles.csv") %>%
select(Best_guess_binomial, Range_size_m2)
RS_amphibians <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/3.with_phylo_eigenvectors/Amphibians.csv") %>%
select(Best_guess_binomial, Range_size_m2)
Completeness_mammals <- read.csv("../../Results/3.Global_gaps_traits/Completeness_mammals.csv")
Completeness_birds <- read.csv("../../Results/3.Global_gaps_traits/Completeness_birds.csv")
Completeness_reptiles <- read.csv("../../Results/3.Global_gaps_traits/Completeness_reptiles.csv")
Completeness_amphibians <- read.csv("../../Results/3.Global_gaps_traits/Completeness_amphibians.csv")
Mammals <- merge(RS_mammals, Completeness_mammals) %>% mutate(Class="Mammals")
Birds <- merge(RS_birds, Completeness_birds)%>% mutate(Class="Birds")
Reptiles <- merge(RS_reptiles, Completeness_reptiles)%>% mutate(Class="Reptiles")
Amphibians <- merge(RS_amphibians, Completeness_amphibians)%>% mutate(Class="Amphibians")
Data <- rbind(Mammals, Birds, Reptiles, Amphibians)
Data$log_RS <- log(Data$Range_size_m2)
Data$N_predictors <- as.factor(Data$N_predictors)
Data$N_target <- as.factor(Data$N_target)
p1 <- ggplot(Data, aes(x=N_predictors,y=log_RS, fill=Class)) +
geom_boxplot(outlier.size =0.5, outlier.colour = "lightblue") +
facet_wrap(~Class) + coord_flip() + GGPoptions +
ylab(expression("Range size (log m"^2*")")) + xlab("Number of sampled traits")
# ## Poisson models for each class
Data <- Data %>% filter(!is.na(log_RS))
# Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class, family="poisson", data=Data))
Summary <- summary(model <- glm(as.numeric(N_predictors) ~ log_RS + Class + log_RS:Class, family="poisson", data=Data))
Summary
