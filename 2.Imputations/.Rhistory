Errors[[i]] <- List[[i]][[Class]]$Imputation.errors
}
return(list(Results=Results, Errors=Errors))
}
Amphibians <- Get_all_results(Imputed, "A")
Get_all_results <- function(List, Class=c("A", "B", "M", "R")) {
Results <- list()
Errors <- list()
for (i in 1:length(List)) {
Results[[i]] <- List[[i]][[Class]]$Imputed.Dataset
Errors[[i]] <- List[[i]][[Class]]$Imputation.errors
}
return(list(Results=Results, Errors=Errors))
}
Amphibians <- Get_all_results(Imputed, "A")
View(Amphibians)
View(Amphibians)
Amphibians <- Get_all_results(Imputed, "A")$Results
Amphibians_errors <- Get_all_results(Imputed, "A")$Errors
View(Amphibians_errors)
## Load data before imputations
Coll_Amphibians <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/4.with_phylo_eigenvectors/Amphibians.csv")
View(Amphibians)
i <- 1
as.character(i)
Congruence_continuous <- function(List_results, Collected, TraitName) {
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(TraitName)]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]]
DF[,as.character(i)] <- X[, TraitName]
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
Congruence_continuous <- function(List_results, Collected, TraitName) {
browser()
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(TraitName)]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]]
DF[,as.character(i)] <- X[, TraitName]
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
Sp
View(Collected)
TraitName
Collected$Best_guess_binomial[is.na(TraitName)]
Collected$Best_guess_binomial[is.na("log_10_Body_mass_g")]
Collected$Best_guess_binomial[is.na(Collected[, TraitName])]
Congruence_continuous <- function(List_results, Collected, TraitName) {
browser()
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(Collected[, TraitName])]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]]
DF[,as.character(i)] <- X[, TraitName]
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
View(DF)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
View(X)
X[, TraitName]
DF[,as.character(i)]
DF$as.character(i) <- X[, TraitName]
Congruence_continuous <- function(List_results, Collected, TraitName) {
browser()
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(Collected[, TraitName])]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
DF[, c(2:(length(List_results)+1))] <- NA
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]]
DF[,i+1] <- X[, TraitName]
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
View(DF)
Congruence_continuous <- function(List_results, Collected, TraitName) {
browser()
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(Collected[, TraitName])]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
DF[, c(2:(length(List_results)+1))] <- NA
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]] %>%
filter(Best_guess_binomial %in% Sp)
DF[,i+1] <- X[, TraitName]
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
View(DF)
View(DF)
View(Test)
Congruence_continuous <- function(List_results, Collected, TraitName) {
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(Collected[, TraitName])]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
DF[, c(2:(length(List_results)+1))] <- NA
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]] %>%
filter(Best_guess_binomial %in% Sp)
DF[,i+1] <- X[, TraitName]
colnames(DF)[i+1] <- paste("Imp", i, sep="_")
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Congruence_continuous <- function(List_results, Collected, TraitName) {
# Get list of species for which values were imputed
Sp <- Collected$Best_guess_binomial[is.na(Collected[, TraitName])]
DF <- Sp %>%
as.data.frame() %>%
setNames(., "Best_guess_binomial")
DF[, c(2:(length(List_results)+1))] <- NA
# Get all imputed values for these species
for (i in 1:length(List_results)) {
X <- List_results[[i]] %>%
filter(Best_guess_binomial %in% Sp)
DF[,i+1] <- X[, TraitName]
colnames(DF)[i+1] <- paste("Imp", i, sep="_")
}
# Add whether phylogenetic info was present or not
DF$Phylo_info <- List_results[[1]]$Phylo_info[List_results[[1]]$Best_guess_binomial %in% Sp]
return(DF)
}
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
View(Test)
plot(Test$Imp_1 ~ Test$Imp_2)
plot(Test$Imp_1 ~ Test$Imp_2, col=as.factor(Test$Phylo_info))
plot(Test$Imp_1 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), add=TRUE)
plot(Test$Imp_1 ~ Test$Imp_2, col=as.factor(Test$Phylo_info))
points(Test$Imp_1 ~ Test$Imp_3, col=as.factor(Test$Phylo_info))
plot(Test$Imp_1 ~ Test$Imp_2, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
plot(Test$Imp_1 ~ Test$Imp_2, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Litter_size")
plot(Test$Imp_1 ~ Test$Imp_2, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Longevity")
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Longevity_d")
plot(Test$Imp_1 ~ Test$Imp_2, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_1 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Litter_size")
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "sqrt_Habitat_breadth_IUCN")
Test
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
Test$MeanImp <- apply(Test[,c(2:ncol(Test))], 1,mean)
warnings()
Test[,c(2:ncol(Test))]
glimpse(Test[,c(2:ncol(Test))])
Test$MeanImp <- apply(Test[,c(2:ncol(Test)-1)], 1,mean)
Test$MeanImp <- apply(Test[,c(2:(ncol(Test)-1))], 1,mean)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
apply(Test[,c(2:(ncol(Test)-1))], 1,mean)
Test$MeanImp <- apply(Test[,c(2:(ncol(Test)-1))], 1,mean)
View(Test)
abline(a=1,b=0, col="blue")
abline(a=0,b=1, col="blue")
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
abline(a=0,b=1, col="blue", size=2)
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
abline(a=0,b=1, col="blue", cex=2)
# Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Litter_size")
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Longevity_d")
plot(Test$Imp_2 ~ Test$Imp_1, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_3, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_4, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_5, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_6, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_7, col=as.factor(Test$Phylo_info), pch=19)
points(Test$Imp_2 ~ Test$Imp_8, col=as.factor(Test$Phylo_info), pch=19)
abline(a=0,b=1, col="blue", cex=2)
Test$MeanImp <- apply(Test[,c(2:(ncol(Test)-1))], 1,mean)
plot(Test$MeanImp)
plot(Test$MeanImp)
plot(order(Test$MeanImp))
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
ggplot(Test, aes(Imp_1, Imp_2, shape=Phylo_info)) +
geom_point()
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point(aes(Imp_1, Imp_3))
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
geom_point(aes(Imp_1, Imp_3))
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
geom_point(aes(Imp_1, Imp_3))
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
geom_point(Imp_1, Imp_3)
ggplot(Test, aes(Imp_1, Imp_2, col=Phylo_info)) +
geom_point()
geom_point(Test$Imp_1, Test$Imp_3)
?melt
## Imputation results congruence for each class, with and without phylogenetic information
library(dplyr)
?melt
??melt
## Imputation results congruence for each class, with and without phylogenetic information
library(reshape)
?melt
X <- melt(Test)
View(X)
X <- melt(Test[2,3])
View(X)
X <- melt(Test[,c(2,3)])
View(X)
X <- melt(Test[,c(2,3)], id.vars = "Imp_1")
View(X)
X <- melt(Test[,c(2,3,4)], id.vars = "Imp_1")
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
X <- melt(Test[,c(2:(ncol(Test-1)))], id.vars = c("Imp_1", "Phylo_info"))
X <- melt(Test[,c(2:(ncol(Test)-1))], id.vars = c("Imp_1", "Phylo_info"))
Test <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
View(Test)
X <- melt(Test[,c(2:(ncol(Test)))], id.vars = c("Imp_1", "Phylo_info"))
colnames(X)
ggplot(X, aes(Imp_1, value, col=Phylo_info)) +
geom_point()
Plot_all_results <- function(All_results, Trait){
X <-  melt(All_results[,c(2:(ncol(All_results)))], id.vars = c("Imp_1", "Phylo_info"))
GGPoptions <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
p <- ggplot(X, aes(Imp_1, value, col=Phylo_info)) +
geom_point() +
xlab(paste(Trait, "(1st imputed set)")) +
ylab(paste(Trait, "(all other imputed sets)")) +
GGPoptions
return(p)
}
Plot_all_results(Test, "BM (log 10),")
Plot_all_results(Test, "BM (log 10,")
Plot_all_results <- function(All_results, Trait){
X <-  melt(All_results[,c(2:(ncol(All_results)))], id.vars = c("Imp_1", "Phylo_info"))
GGPoptions <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
p <- ggplot(X, aes(Imp_1, value, col=Phylo_info)) +
geom_point() +
xlab(paste(Trait, "1st imputed set)")) +
ylab(paste(Trait, "all other imputed sets)")) +
GGPoptions
return(p)
}
Plot_all_results <- function(All_results, Trait){
X <-  melt(All_results[,c(2:(ncol(All_results)))], id.vars = c("Imp_1", "Phylo_info"))
GGPoptions <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
p <- ggplot(X, aes(Imp_1, value, col=Phylo_info)) +
geom_point() +
xlab(paste(Trait, "1st imputed set)")) +
ylab(paste(Trait, "all other imputed sets)")) +
GGPoptions +
scale_color_hue(labels = c("Without", "With"), title="Phylogenetic information")
return(p)
}
Plot_all_results(Test, "BM (log 10,")
Plot_all_results <- function(All_results, Trait){
X <-  melt(All_results[,c(2:(ncol(All_results)))], id.vars = c("Imp_1", "Phylo_info"))
GGPoptions <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
p <- ggplot(X, aes(Imp_1, value, col=Phylo_info)) +
geom_point() +
xlab(paste(Trait, "1st imputed set)")) +
ylab(paste(Trait, "all other imputed sets)")) +
GGPoptions +
scale_color_hue(labels = c("Without", "With"), name="Phylogenetic information")
return(p)
}
Plot_all_results(Test, "BM (log 10,")
RS <- Congruence_continuous(Amphibians, Coll_Amphibians, "Range_size_m2")
LCS <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Litter_size")
LG <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Longevity_d")
HB <- Congruence_continuous(Amphibians, Coll_Amphibians, "sqrt_Habitat_breadth_IUCN")
BM <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
RS <- Congruence_continuous(Amphibians, Coll_Amphibians, "Range_size_m2")
pBM <- Plot_all_results(LCS, "BM (log 10,")
pLCS <- Plot_all_results(LCS, "LCS (log 10,")
pLG <- Plot_all_results(LCS, "Longevity (log 10,")
pHB <- Plot_all_results(HB, "HB (square-root,")
pRS <- Plot_all_results(RS, "RS,")
ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
pBM <- Plot_all_results(BM, "BM (log 10,")
pLCS <- Plot_all_results(LCS, "LCS (log 10,")
pLG <- Plot_all_results(LG, "Longevity (log 10,")
pHB <- Plot_all_results(HB, "HB (square-root,")
pRS <- Plot_all_results(RS, "RS,")
ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
p <- ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
p
p <- ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=7, height=5)
p <- ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=7)
p <- ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=7)
p <- ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=7)
LCS <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Litter_size")
LG <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Longevity_d")
HB <- Congruence_continuous(Amphibians, Coll_Amphibians, "sqrt_Habitat_breadth_IUCN")
BM <- Congruence_continuous(Amphibians, Coll_Amphibians, "log10_Body_mass_g")
RS <- Congruence_continuous(Amphibians, Coll_Amphibians, "Range_size_m2")
pBM <- Plot_all_results(BM, "BM (log 10,")
pLCS <- Plot_all_results(LCS, "LCS (log 10,")
pLG <- Plot_all_results(LG, "Longevity (log 10,")
pHB <- Plot_all_results(HB, "HB (square-root,")
pRS <- Plot_all_results(RS, "RS,")
p <- ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=7)
RS[,c(2:9)] <- log10(RS[,c(2:9)])
RS <- Congruence_continuous(Amphibians, Coll_Amphibians, "Range_size_m2")
RS[,c(2:9)] <- log10(RS[,c(2:9)])
pRS <- Plot_all_results(RS, "RS,")
p <- ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
p
pRS <- Plot_all_results(RS, "RS, (log10,")
p <- ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=7)
Plot_all_results <- function(All_results, Trait){
X <-  melt(All_results[,c(2:(ncol(All_results)))], id.vars = c("Imp_1", "Phylo_info"))
GGPoptions <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
p <- ggplot(X, aes(Imp_1, value, col=Phylo_info)) +
geom_point() +
xlab(paste(Trait, "1st imputed set)")) +
ylab(paste(Trait, "all other imputed sets)")) +
GGPoptions +
scale_color_hue(labels = c("Without", "With"), name="Phylogenetic information") +
geom_abline(slope=1, intercept=0)
return(p)
}
pBM <- Plot_all_results(BM, "BM (log 10,")
pLCS <- Plot_all_results(LCS, "LCS (log 10,")
pLG <- Plot_all_results(LG, "Longevity (log 10,")
pHB <- Plot_all_results(HB, "HB (square-root,")
pRS <- Plot_all_results(RS, "RS, (log10,")
p <- ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=8)
Plot.Congruence.Continuous <- function(All_results, Collected) {
LCS <- Congruence_continuous(All_results, Collected, "log10_Litter_size")
LG <- Congruence_continuous(All_results, Collected, "log10_Longevity_d")
HB <- Congruence_continuous(All_results, Collected, "sqrt_Habitat_breadth_IUCN")
BM <- Congruence_continuous(All_results, Collected, "log10_Body_mass_g")
RS <- Congruence_continuous(All_results, Collected, "Range_size_m2")
RS[,c(2:(ncol(RS)-1))] <- log10(RS[,c(2:(ncol(RS)-1))])
pBM <- Plot_all_results(BM, "BM (log 10,")
pLCS <- Plot_all_results(LCS, "LCS (log 10,")
pLG <- Plot_all_results(LG, "Longevity (log 10,")
pHB <- Plot_all_results(HB, "HB (square-root,")
pRS <- Plot_all_results(RS, "RS, (log10,")
p <- ggarrange(pBM, pLCS, pLG, pHB, pRS, common.legend = TRUE)
return(p)
}
## Amphibians
All_Amphibians <- Get_all_results(Imputed, "A")$Results
Plot.Congruence.Continuous(All_Amphibians, Coll_Amphibians)
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Amphibians.pdf", width=10, height=8)
Coll_Reptiles <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/4.with_phylo_eigenvectors/Reptiles.csv")
## Reptiles
All_Reptiles <- Get_all_results(Imputed, "R")$Results
p <- Plot.Congruence.Continuous(All_Reptiles, Coll_Reptiles)
p
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Reptiles.pdf", width=10, height=8)
Coll_Mammals <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/4.with_phylo_eigenvectors/Mammals.csv")
## Mammals
All_Mammals <- Get_all_results(Imputed, "M")$Results
Mammals_errors <- Get_all_results(Imputed, "M")$Errors
p <- Plot.Congruence.Continuous(All_Mammals, Coll_Mammals)
p
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Mammals.pdf", width=10, height=8)
Coll_Birds <- read.csv("../../Results/1.Traits_before_imputations/With_taxonomic_correction/All_species/4.with_phylo_eigenvectors/Birds.csv")
## Birds
All_Birds <- Get_all_results(Imputed, "B")$Results
Birds_errors <- Get_all_results(Imputed, "B")$Errors
p <- Plot.Congruence.Continuous(All_Birds, Coll_Birds)
p
ggsave(p, file="../../Results/Plots/Congruence_imputations/Continuous/Birds.pdf", width=10, height=8)
source('~/PhD/PhD_analyses/1.Trait_compilation/Code/2.Imputations/5.Results_congruence.R', echo=TRUE)
source('~/PhD/PhD_analyses/1.Trait_compilation/Code/2.Imputations/5.Results_congruence.R', echo=TRUE)
