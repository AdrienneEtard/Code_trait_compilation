p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_log10() +
#scale_y_continuous(, trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point()
ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_log10()
ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_log10() +
#scale_y_continuous(, trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(, trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(trans="log10", labels=scales::comma) +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
PlotPFC <- function(PFCErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
PFC <- melt(PFCErrors)
PFC <- PFC %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
PFC$Max[15] <- NA
PFC$Min[15] <- NA
p <- ggplot(PFC, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("DA", "TL", "PD", "Sp")) +
geom_segment(aes(x=variable, xend=variable, y=PFC$Min, yend=PFC$Max, col=Class)) +
ylim(0,100) +
xlab("") + ylab("OOB % falsely classified") + coord_flip()
return(p)
}
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
browser()
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=scales::comma, trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=scales::comma, trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
## Plot PFC for all classes
pPFC <- PlotPFC(PFC_all)
pPFC
PlotPFC <- function(PFCErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
PFC <- melt(PFCErrors)
PFC <- PFC %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
PFC$Max[15] <- NA
PFC$Min[15] <- NA
p <- ggplot(PFC, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("DA", "TL", "PD", "Sp")) +
geom_segment(aes(x=variable, xend=variable, y=PFC$Min, yend=PFC$Max, col=Class)) +
ylim(0,23) +
xlab("") + ylab("OOB % falsely classified") + coord_flip()
return(p)
}
pPFC
## Plot PFC for all classes
pPFC <- PlotPFC(PFC_all)
pPFC
PlotPFC <- function(PFCErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
PFC <- melt(PFCErrors)
PFC <- PFC %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
PFC$Max[15] <- NA
PFC$Min[15] <- NA
p <- ggplot(PFC, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("DA", "TL", "PD", "Sp")) +
geom_segment(aes(x=variable, xend=variable, y=PFC$Min, yend=PFC$Max, col=Class)) +
ylim(0,20) +
xlab("") + ylab("OOB % falsely classified") + coord_flip()
return(p)
}
## Functions to get and to plot imputation errors for continuous traits: MSE
GetrootMSE <- function(Errors){
Contraits <- c("Body_mass_g", "Longevity_d", "Litter_size", "Diet_breadth","Habitat_breadth_IUCN","Range_size_m2")
Y <- which(colnames(Errors) %in% paste(Contraits, "MSE", sep=" "))
Y <- Errors[,Y]
Y <- sqrt(Y)
Y[, "Body_mass_g MSE"] <- Y[, "Body_mass_g MSE"] / 1000  # in kg
Y[, "Longevity_d MSE"] <- Y[, "Longevity_d MSE"] / 365.25 # in years
Y[, "Range_size_m2 MSE"] <- Y[, "Range_size_m2 MSE"] / 1000000 # in kms square
return(Y)
}
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mm)", "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
MSE_amp <- GetrootMSE(Errors_amp); MSE_amp$Class <- "Amphibians"
MSE_rep <- GetrootMSE(Errors_rep);  MSE_rep$`Diet_breadth MSE` <- NA;  MSE_rep$Class <- "Reptiles"
MSE_mam <- GetrootMSE(Errors_mam);  MSE_mam$Class <- "Mammals"
MSE_bir <- GetrootMSE(Errors_bir); MSE_bir$Class <- "Birds"
MSE_all <- rbind(MSE_amp, MSE_rep, MSE_mam, MSE_bir)
## Plot MSE for all classes
pMSE <- PlotMSE(MSE_all)
pMSE
source('~/PhD/PhD_R_work/1.Trait_compilation/Code/2.Imputations/10.Imputation_errors.R', echo=TRUE)
pMSE
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", "RS (Mega-m sq)", "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
source('~/PhD/PhD_R_work/1.Trait_compilation/Code/2.Imputations/10.Imputation_errors.R', echo=TRUE)
pPFC
pMSE
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE,widths=c(0.525,0.475))
p
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.525,0.475), legend="right")
p
expression("RS (Mega-m "^2")")
expression("RS (Mega-m "^2,")")
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", expression("RS (Mega-m "^2,")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", paste("RS (Mega-",expression("m"^2),")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", expression("Mega-m"^2*")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", expression("RS (mega-m"^2*")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab("OOB root-mean-square error") + coord_flip()
return(p)
}
PlotMSE(MSE_all)
source('~/PhD/PhD_R_work/1.Trait_compilation/Code/2.Imputations/10.Imputation_errors.R', echo=TRUE)
p
1-055
1-0.55
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.550,0.45), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.6,0.4), legend="right")
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", expression("RS (mega-m"^2*")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab(expression(sqrt("OOB root-mean-square error"))) + coord_flip()
return(p)
}
PlotMSE(MSE_all)
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "LG (years)", "LCS", expression("RS (mega-m"^2*")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab(expression(sqrt("OOB mean-square error"))) + coord_flip()
return(p)
}
PlotMSE(MSE_all)
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.6,0.4), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.6,0.4), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
## Plot MSE for all classes
pMSE <- PlotMSE(MSE_all)
pMSE
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.6,0.4), legend="right")
p
p
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.545,0.5), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.545,0.4), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
1-0.545
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.545,0.455), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.55,0.45), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
1-0.555
p <- ggarrange(pMSE + labs(tag = "A") + theme(plot.tag.position = c(0.95, 0.94)),
pPFC + labs(tag = "B") + theme(plot.tag.position = c(0.95, 0.94)),
common.legend = TRUE, widths=c(0.555,0.445), legend="right")
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=7, height=3)
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=10, height=3)
ggsave(p, file="../../Results/Plots/Imputation_errors/MSE_PFC.pdf", width=8.5, height=3)
source("10.Imputation_errors.R")
p2 <- ggarrange(pCat + labs(tag = "A") + theme(plot.tag.position = "topleft"),
pCont+ labs(tag = "B")+ theme(plot.tag.position = "topleft"),
common.legend=TRUE, legend = "right")
source('~/PhD/PhD_R_work/1.Trait_compilation/Code/2.Imputations/11.Results_congruence.R', echo=TRUE)
ggarrange(p, p2)
ggsave(p2, filename = "../../Results/Plots/Congruence_imputations/Summary.pdf", height = 3, width = 8.5)
p <- ggarrange(p, p2, common.legend = TRUE)
p
