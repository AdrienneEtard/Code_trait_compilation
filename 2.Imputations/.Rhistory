length(unique(SynM$CorrectedTypos)),
length(unique(SynM$Accepted)))
DF[2,] <- c(length(unique(SynB$Original)),
length(unique(SynB$CorrectedTypos)),
length(unique(SynB$Accepted)))
DF[3,] <- c(length(unique(SynR$Original)),
length(unique(SynR$CorrectedTypos)),
length(unique(SynR$Accepted)))
DF[4,] <- c(length(unique(SynA$Original)),
length(unique(SynA$CorrectedTypos)),
length(unique(SynA$Accepted)))
DF$Class <- rownames(DF)
toplot <- DF %>% select(-corrected)
toplot <- reshape::melt(toplot)
toplot$Class <- factor(toplot$Class, levels=c("birds","reptiles","amphibians","mammals"), labels=c("Birds", "Reptiles",
"Amphibians", "Mammals"))
p <- ggplot(toplot, aes(Class,value, fill=variable)) +
geom_bar(stat="identity", position="dodge") + ylab("Names \nacross all datasets") +
scale_fill_manual(values=c("cornflowerblue","coral"), name="", labels=c("original", "extracted")) + GGPoptions +
theme(axis.text.x = element_text(angle = 13, hjust = 1)) +
geom_text(
aes(label = value, y = value + 0.05),
position = position_dodge(0.9),
vjust = -0.5, size=5
) + ylim(0, 14200) +
theme(legend.background = element_rect(color="black"), legend.position = c(0.86505,0.90505))
return(list(p=p, n=toplot))
}
Delta(SynM, SynA, SynB, SynR)$p + ylab("Binomial names")
## Species with the most number of replicates
MaxSyn <- function(Syn) {
Table <- Syn %>%
filter(Accepted!="") %>%
group_by(Accepted) %>%
summarise(Count=n())
Max <- Table$Accepted[Table$Count==max(Table$Count)]
if(length(Max)==1) {  All <- Syn$CorrectedTypos[Syn$Accepted==Max]}
else{All1 <- Syn$CorrectedTypos[Syn$Accepted==Max[1]] %>% as.character()
All2 <- Syn$CorrectedTypos[Syn$Accepted==Max[2]]%>% as.character()
return(list(Accepted=Max, Replicates1=All1, Replicates2=All2))
}
return(list(Accepted=Max, Replicates=All))
}
## Function to plot distribution of number of names for each accepted name
Dist_NR <- function(Syn) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=20, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=20),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=20),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=20))
Table <- Syn %>%
filter(Accepted!="") %>%
group_by(Class, Accepted) %>%
summarise(Count=n())
Table <- table(Table$Count, Table$Class) %>%
as.data.frame()
Table_top <- Table %>%
#filter(Var1!=1) %>%
filter(Freq!=0)
p <- ggplot(Table_top, aes(Var1, Freq, fill=Var2)) + geom_point(size=4,pch=21,alpha=0.5) + GGPoptions +
scale_y_continuous(trans="log10", breaks=c(1,2,5, 10,25, 50, 100,250, 500, 1000,2000,5000)) +
scale_fill_discrete(name="Class", labels=c("Amphibians","Birds","Mammals","Reptiles")) +
ylab("Number of species") + xlab("Number of synonyms") +
theme(legend.background = element_rect(color="black"), legend.position = c(0.84,0.86))
return(list(p=p, Freq=Table_top))
}
## Plot
p1 <- Delta(SynM, SynA, SynB, SynR)$p + ylab("Binomial names") + xlab(NULL) + labs(tag = "A") + theme(plot.tag.position = c(0.97, 0.96))
p1
p2 <- Dist_NR(Syn)4p + labs(tag = "B") + theme(plot.tag.position = c(0.97, 0.96))
p2 <- Dist_NR(Syn)$p + labs(tag = "B") + theme(plot.tag.position = c(0.97, 0.96))
p2$data
p <- ggarrange(p1, p2, widths = c(1/2, 1/2))
ggsave(p, file="../../Results/Plots/Taxonomic_corrections/tax_corrections.pdf", width = 14, height = 6)
source('~/PhD/PhD_R_work/1.Trait_compilation/Code/0.Prerequisites/0.5.Taxonomic_corrections_overview.R', echo=TRUE)
X <- Dist_NR(Syn)
X <- Dist_NR(Syn)$Freq
View(X)
X <- c("data.table", "plyr", "dplyr", "tidyr", "magrittr", "reshape", "reshape2", "stringr", "stringi")
invisible(lapply(X, library, character.only=TRUE)); rm(X)
`%nin%` = Negate(`%in%`)
# Corrected data
MammalDIET_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/MammalDIET.csv")
Amphibio_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Amphibio.csv")
Elton_birds_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_birds.csv")
Elton_mammals_C <-  read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_mammals.csv")
# Uncorrected data
Amphibio_UN <- read.csv("../../Data/Amphibians/AmphiBIO_v1.csv")
colnames(Amphibio_UN)[5] <- "Best_guess_binomial"
Elton_birds_UN <- read.csv("../../Data/Birds/EltonTraits_Birds.csv")
Elton_mammals_UN <-  read.csv("../../Data/Mammals/EltonTraits_Mammals.csv")
## Change Diet.5Cat in Elton birds
Elton_birds_C <- Elton_birds_C %>%
mutate(Diet.5Cat=ifelse(Diet.5Cat=="PlantSeed", "PL|SE",
ifelse(Diet.5Cat=="Omnivore", "OM",
ifelse(Diet.5Cat=="FruiNect", "FR|NE",
ifelse(Diet.5Cat=="Invertebrate", "IN",
ifelse(Diet.5Cat=="VertFishScav", "VE", NA))))))
Elton_birds_UN <- Elton_birds_UN %>%
mutate(Diet.5Cat=ifelse(Diet.5Cat=="PlantSeed", "PL|SE",
ifelse(Diet.5Cat=="Omnivore", "OM",
ifelse(Diet.5Cat=="FruiNect", "FR|NE",
ifelse(Diet.5Cat=="Invertebrate", "IN",
ifelse(Diet.5Cat=="VertFishScav", "VE", NA))))))
# Put mammalian diet information together
Kissling <- read.csv("../../Data/Mammals/Kissling_Mammal_diet_2014.csv", sep=",")
Kissling$Binomial_name <- paste(Kissling$Genus, Kissling$Species, sep=" ")
Kissling <- subset(Kissling, Binomial_name != "Mico sp. nov.")
Kissling <- Kissling %>% select(-TaxonID, -TaxonomicNote, -FillCode)
Kissling <- Kissling[, c(28, 1:27)]
MammalDIET2 <- read.csv("../../Data/Mammals/MammalDIET_2/MammalDIET2.csv")[, c(1:28)]
colnames(MammalDIET2)[28] <- "DataSource"
MammalDIET2_supp <- read.csv("../../Data/Mammals/MammalDIET_2/MammalDIET_2_supp.csv")
MammalDIET2_supp$TrophicLevel %<>% as.character()
MammalDIET2_supp <- MammalDIET2_supp %>%
mutate(TrophicLevel=ifelse(TrophicLevel %in% c("Carnivore", "Omnivore", "Herbivore"), TrophicLevel, NA)) %>%
filter(!is.na(TrophicLevel)) %>%
mutate(Mammal=ifelse(Mammal %in% c(0:3), Mammal, NA)) %>%
mutate(MammalEater=ifelse(MammalEater %in% c(0:3), MammalEater, NA)) %>%
mutate(Insectivore=ifelse(Insectivore %in% c(0:3), Insectivore, NA))%>%
mutate(Frugivore=ifelse(Frugivore %in% c(0:3), Frugivore, NA))%>%
mutate(Granivore=ifelse(Granivore %in% c(0:3), Granivore, NA)) %>%
mutate(Folivore=ifelse(Folivore %in% c(0:3), Folivore, NA))
MammalDIET2_supp[, c(6:27)] %<>% droplevels()
MammalDIET2 <- rbind(MammalDIET2, MammalDIET2_supp)
MammalDIET2$Binomial <- as.character(MammalDIET2$Binomial)
MammalDIET2$Binomial[MammalDIET2$Binomial=="Rhinolophus hildebrandtii"] <- "Rhinolophus hildebrandti"
MammalDIET2$Binomial[MammalDIET2$Binomial=="Tadarida bivittatus"] <- "Tadarida bivittata"
colnames(MammalDIET2)[1] <- "Binomial_name"
Y <- intersect(MammalDIET2$Binomial_name, Kissling$Binomial_name)
Kissling <- Kissling %>% filter(Binomial_name %nin% Y)
MammalDIET_UN <- rbind(Kissling, MammalDIET2) # dataset to use
rm(Kissling, MammalDIET2, MammalDIET2_supp, Y)
View(MammalDIET_C)
Elton_mammals_C <-  read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_mammals.csv")
View(Elton_mammals_C)
View(MammalDIET_C)
# Put mammalian diet information together
Kissling <- read.csv("../../Data/Mammals/Kissling_Mammal_diet_2014.csv", sep=",")
View(Kissling)
## Process Diet information from Kissling (Mammals) ("MammalDiet"), Amphibio (Amphibians) and Elton traits (Birds and mammals)
## Sekercioglu not used
## Adopting a binary classification for food items. The variables are: VE, IN, FR, SE, PL, NE, SCV
## Define 5 categories:
# 1: plant/seed
# 2: fruit/nectar
# 3: vertebrates (includes carrion)
# 4: invertebrates
# 5: omnivores
## Preamble
X <- c("data.table", "plyr", "dplyr", "tidyr", "magrittr", "reshape", "reshape2", "stringr", "stringi")
invisible(lapply(X, library, character.only=TRUE)); rm(X)
`%nin%` = Negate(`%in%`)
# Corrected data
MammalDIET_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/MammalDIET.csv")
Amphibio_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Amphibio.csv")
Elton_birds_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_birds.csv")
Elton_mammals_C <-  read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_mammals.csv")
# Uncorrected data
Amphibio_UN <- read.csv("../../Data/Amphibians/AmphiBIO_v1.csv")
colnames(Amphibio_UN)[5] <- "Best_guess_binomial"
Elton_birds_UN <- read.csv("../../Data/Birds/EltonTraits_Birds.csv")
Elton_mammals_UN <-  read.csv("../../Data/Mammals/EltonTraits_Mammals.csv")
## Change Diet.5Cat in Elton birds
Elton_birds_C <- Elton_birds_C %>%
mutate(Diet.5Cat=ifelse(Diet.5Cat=="PlantSeed", "PL|SE",
ifelse(Diet.5Cat=="Omnivore", "OM",
ifelse(Diet.5Cat=="FruiNect", "FR|NE",
ifelse(Diet.5Cat=="Invertebrate", "IN",
ifelse(Diet.5Cat=="VertFishScav", "VE", NA))))))
Elton_birds_UN <- Elton_birds_UN %>%
mutate(Diet.5Cat=ifelse(Diet.5Cat=="PlantSeed", "PL|SE",
ifelse(Diet.5Cat=="Omnivore", "OM",
ifelse(Diet.5Cat=="FruiNect", "FR|NE",
ifelse(Diet.5Cat=="Invertebrate", "IN",
ifelse(Diet.5Cat=="VertFishScav", "VE", NA))))))
# Put mammalian diet information together
Kissling <- read.csv("../../Data/Mammals/Kissling_Mammal_diet_2014.csv", sep=",")
Kissling$Binomial_name <- paste(Kissling$Genus, Kissling$Species, sep=" ")
Kissling <- subset(Kissling, Binomial_name != "Mico sp. nov.")
Kissling <- Kissling %>% select(-TaxonID, -TaxonomicNote, -FillCode)
Kissling <- Kissling[, c(28, 1:27)]
MammalDIET2 <- read.csv("../../Data/Mammals/MammalDIET_2/MammalDIET2.csv")[, c(1:28)]
colnames(MammalDIET2)[28] <- "DataSource"
MammalDIET2_supp <- read.csv("../../Data/Mammals/MammalDIET_2/MammalDIET_2_supp.csv")
MammalDIET2_supp$TrophicLevel %<>% as.character()
MammalDIET2_supp <- MammalDIET2_supp %>%
mutate(TrophicLevel=ifelse(TrophicLevel %in% c("Carnivore", "Omnivore", "Herbivore"), TrophicLevel, NA)) %>%
filter(!is.na(TrophicLevel)) %>%
mutate(Mammal=ifelse(Mammal %in% c(0:3), Mammal, NA)) %>%
mutate(MammalEater=ifelse(MammalEater %in% c(0:3), MammalEater, NA)) %>%
mutate(Insectivore=ifelse(Insectivore %in% c(0:3), Insectivore, NA))%>%
mutate(Frugivore=ifelse(Frugivore %in% c(0:3), Frugivore, NA))%>%
mutate(Granivore=ifelse(Granivore %in% c(0:3), Granivore, NA)) %>%
mutate(Folivore=ifelse(Folivore %in% c(0:3), Folivore, NA))
MammalDIET2_supp[, c(6:27)] %<>% droplevels()
MammalDIET2 <- rbind(MammalDIET2, MammalDIET2_supp)
MammalDIET2$Binomial <- as.character(MammalDIET2$Binomial)
MammalDIET2$Binomial[MammalDIET2$Binomial=="Rhinolophus hildebrandtii"] <- "Rhinolophus hildebrandti"
MammalDIET2$Binomial[MammalDIET2$Binomial=="Tadarida bivittatus"] <- "Tadarida bivittata"
colnames(MammalDIET2)[1] <- "Binomial_name"
Y <- intersect(MammalDIET2$Binomial_name, Kissling$Binomial_name)
Kissling <- Kissling %>% filter(Binomial_name %nin% Y)
MammalDIET_UN <- rbind(Kissling, MammalDIET2) # dataset to use
rm(Kissling, MammalDIET2, MammalDIET2_supp, Y)
View(MammalDIET_C)
View(Elton_mammals_C)
x <- Elton_mammals_C[, c(4:13)]
View(x)
x2 <- x[50]
x2 <- x[x==50]
x2
x2 <- x %>% filter(any(x==50))
View(x2)
x$Diet.Vert <- x$Diet.Vend + x$Diet.Vect + x$Diet.Vfish + x$Diet.Vunk + x$Diet.Scav
x <- x[, -c("Diet.Vend", "Diet.Vect", "Diet.Vfish", "Diet.Vunk", "Diet.Scav")]
x <- x[, -c(x$Diet.Vend, x$Diet.Vect, x$Diet.Vfish, x$Diet.Vunk, x$Diet.Scav)]
x <- Elton_mammals_C[, c(4:13)]
x$Diet.Vert <- x$Diet.Vend + x$Diet.Vect + x$Diet.Vfish + x$Diet.Vunk + x$Diet.Scav
x <- x %>% select (-Diet.Vend, -Diet.Vect , -Diet.Vfish, -Diet.Vunk, -Diet.Scav )
x2 <- x %>% filter(x$Diet.Fruit==50|x$Diet.Nect==50|x$Diet.Seed==50|x$Diet.PlantO==50|x$Diet.Vert==50|x$Diet.Inv==50)
View(x2)
View(Amphibio_C)
## Data corrected for taxonomy
IUCN_mammal_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_mammals.csv")
View(IUCN_mammal_C)
unique(IUCN_mammal_C$Major.importance)
unique(IUCN_mammal_C$Suitability)
?readOGR
# Load packages -----------------------------------------------------------
X <- c("ggmap", "rgdal", "maptools", "rgeos", "dplyr", "raster", "maps", "geosphere", "sp", "sf", "lwgeom", "mapproj")
lapply(X, library, character.only = TRUE)
?readOGR
# Read shapefile object as sf ---------------------------------------------
Reptiles <- st_as_sf(readOGR(dsn="../Data/Range_sizes/Reptiles_IUCN_range_size", layer="REPTILES"))
PhyloMammal <- read.newick("../../Data/Mammals/Phylogenies/TTOL_mammals_smoothed_interpolated.nwk") %>% .Format_tiplabels()
PhyloAmphibian <- read.newick("../../Data/Phylogenies/TTOL_amphibians_unsmoothed_Hedges2015.nwk") %>% .Format_tiplabels()
PhyloBird <- read.newick("../../Data/Phylogenies/TTOL_birds_smoothed_interpolated_Hedges2015.nwk") %>% .Format_tiplabels()
PhyloReptile <- read.newick("../../Data/Phylogenies/TTOL_squamates_unsmoothed_Hedges2015.nwk") %>% .Format_tiplabels()
X <- c("dplyr", "taxize", "phytools", "stringr", "rredlist", "stringdist", "plyr", "pbapply", "GlobalOptions", "data.table", "ngram")
lapply(X, library, character.only=TRUE); rm(X)
PhyloMammal <- read.newick("../../Data/Mammals/Phylogenies/TTOL_mammals_smoothed_interpolated.nwk") %>% .Format_tiplabels()
PhyloAmphibian <- read.newick("../../Data/Phylogenies/TTOL_amphibians_unsmoothed_Hedges2015.nwk") %>% .Format_tiplabels()
PhyloBird <- read.newick("../../Data/Phylogenies/TTOL_birds_smoothed_interpolated_Hedges2015.nwk") %>% .Format_tiplabels()
PhyloReptile <- read.newick("../../Data/Phylogenies/TTOL_squamates_unsmoothed_Hedges2015.nwk") %>% .Format_tiplabels()
source("Resolve_taxonomy_functions.R")
# Phylogenies
PhyloMammal <- read.newick("../../Data/Mammals/Phylogenies/TTOL_mammals_smoothed_interpolated.nwk") %>% .Format_tiplabels()
PhyloAmphibian <- read.newick("../../Data/Phylogenies/TTOL_amphibians_unsmoothed_Hedges2015.nwk") %>% .Format_tiplabels()
PhyloBird <- read.newick("../../Data/Phylogenies/TTOL_birds_smoothed_interpolated_Hedges2015.nwk") %>% .Format_tiplabels()
PhyloReptile <- read.newick("../../Data/Phylogenies/TTOL_squamates_unsmoothed_Hedges2015.nwk") %>% .Format_tiplabels()
length(PhyloMammal$tip.label)
length(PhyloAmphibian$tip.label)
PhyloBird <- read.newick("../../Data/Phylogenies/TTOL_birds_smoothed_interpolated_Hedges2015.nwk") %>% .Format_tiplabels()
length(PhyloBird$tip.label)
length(PhyloReptile$tip.label)
length(PhyloMammal$tip.label) +length(PhyloAmphibian$tip.label)+length(PhyloBird$tip.label)+ length(PhyloReptile$tip.label)
## ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ##
X <- c("grid", "gridExtra", "ggpubr", "dplyr", "lattice", "stringr")
invisible(lapply(X, library, character.only=TRUE)); rm(X)
## Data corrected for taxonomy
IUCN_mammal_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_mammals.csv")
IUCN_amphibian_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_amphibians.csv")
IUCN_bird_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_birds.csv")
IUCN_reptile_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_reptiles.csv")
View(IUCN_amphibian_C)
table(IUCN_amphibian_C$Major.importance, IUCN_amphibian_C$Suitability)
table(IUCN_amphibian_C$Major.importance, IUCN_amphibian_C$Suitability)
table(IUCN_mammal_C$Major.importance, IUCN_mammal_C$Suitability)
table(IUCN_bird_C$Major.importance, IUCN_bird_C$Suitability)
table(IUCN_reptile_C$Major.importance, IUCN_reptile_C$Suitability)
all <- rbind(IUCN_amphibian_C, IUCN_bird_C, IUCN_mammal_C, IUCN_reptile_C)
table(all$Major.importance, all$Suitability)
table( all$Suitability, all$Major.importance)
unique(all$Major.importance)
all$Major.importance[is.na(all$Major.importance)] <- "Unknwon"
all$Major.importance <- as.character(all$Major.importance)
all$Major.importance[is.na(all$Major.importance)] <- "Unknown"
all$Suitability <- as.character(all$Suitability)
all$Suitability[is.na(all$Suitability)] <- "Unknown"
table( all$Suitability, all$Major.importance)
## Process Diet information from Kissling (Mammals) ("MammalDiet"), Amphibio (Amphibians) and Elton traits (Birds and mammals)
## Sekercioglu not used
## Adopting a binary classification for food items. The variables are: VE, IN, FR, SE, PL, NE, SCV
## Define 5 categories:
# 1: plant/seed
# 2: fruit/nectar
# 3: vertebrates (includes carrion)
# 4: invertebrates
# 5: omnivores
## Preamble
X <- c("data.table", "plyr", "dplyr", "tidyr", "magrittr", "reshape", "reshape2", "stringr", "stringi")
invisible(lapply(X, library, character.only=TRUE)); rm(X)
`%nin%` = Negate(`%in%`)
# Corrected data
MammalDIET_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/MammalDIET.csv")
Amphibio_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Amphibio.csv")
Elton_birds_C <- read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_birds.csv")
Elton_mammals_C <-  read.csv("../../Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/Elton_mammals.csv")
# Uncorrected data
Amphibio_UN <- read.csv("../../Data/Amphibians/AmphiBIO_v1.csv")
colnames(Amphibio_UN)[5] <- "Best_guess_binomial"
Elton_birds_UN <- read.csv("../../Data/Birds/EltonTraits_Birds.csv")
Elton_mammals_UN <-  read.csv("../../Data/Mammals/EltonTraits_Mammals.csv")
## Change Diet.5Cat in Elton birds
Elton_birds_C <- Elton_birds_C %>%
mutate(Diet.5Cat=ifelse(Diet.5Cat=="PlantSeed", "PL|SE",
ifelse(Diet.5Cat=="Omnivore", "OM",
ifelse(Diet.5Cat=="FruiNect", "FR|NE",
ifelse(Diet.5Cat=="Invertebrate", "IN",
ifelse(Diet.5Cat=="VertFishScav", "VE", NA))))))
Elton_birds_UN <- Elton_birds_UN %>%
mutate(Diet.5Cat=ifelse(Diet.5Cat=="PlantSeed", "PL|SE",
ifelse(Diet.5Cat=="Omnivore", "OM",
ifelse(Diet.5Cat=="FruiNect", "FR|NE",
ifelse(Diet.5Cat=="Invertebrate", "IN",
ifelse(Diet.5Cat=="VertFishScav", "VE", NA))))))
# Put mammalian diet information together
Kissling <- read.csv("../../Data/Mammals/Kissling_Mammal_diet_2014.csv", sep=",")
Kissling$Binomial_name <- paste(Kissling$Genus, Kissling$Species, sep=" ")
Kissling <- subset(Kissling, Binomial_name != "Mico sp. nov.")
Kissling <- Kissling %>% select(-TaxonID, -TaxonomicNote, -FillCode)
Kissling <- Kissling[, c(28, 1:27)]
MammalDIET2 <- read.csv("../../Data/Mammals/MammalDIET_2/MammalDIET2.csv")[, c(1:28)]
colnames(MammalDIET2)[28] <- "DataSource"
MammalDIET2_supp <- read.csv("../../Data/Mammals/MammalDIET_2/MammalDIET_2_supp.csv")
MammalDIET2_supp$TrophicLevel %<>% as.character()
MammalDIET2_supp <- MammalDIET2_supp %>%
mutate(TrophicLevel=ifelse(TrophicLevel %in% c("Carnivore", "Omnivore", "Herbivore"), TrophicLevel, NA)) %>%
filter(!is.na(TrophicLevel)) %>%
mutate(Mammal=ifelse(Mammal %in% c(0:3), Mammal, NA)) %>%
mutate(MammalEater=ifelse(MammalEater %in% c(0:3), MammalEater, NA)) %>%
mutate(Insectivore=ifelse(Insectivore %in% c(0:3), Insectivore, NA))%>%
mutate(Frugivore=ifelse(Frugivore %in% c(0:3), Frugivore, NA))%>%
mutate(Granivore=ifelse(Granivore %in% c(0:3), Granivore, NA)) %>%
mutate(Folivore=ifelse(Folivore %in% c(0:3), Folivore, NA))
MammalDIET2_supp[, c(6:27)] %<>% droplevels()
MammalDIET2 <- rbind(MammalDIET2, MammalDIET2_supp)
MammalDIET2$Binomial <- as.character(MammalDIET2$Binomial)
MammalDIET2$Binomial[MammalDIET2$Binomial=="Rhinolophus hildebrandtii"] <- "Rhinolophus hildebrandti"
MammalDIET2$Binomial[MammalDIET2$Binomial=="Tadarida bivittatus"] <- "Tadarida bivittata"
colnames(MammalDIET2)[1] <- "Binomial_name"
Y <- intersect(MammalDIET2$Binomial_name, Kissling$Binomial_name)
Kissling <- Kissling %>% filter(Binomial_name %nin% Y)
MammalDIET_UN <- rbind(Kissling, MammalDIET2) # dataset to use
rm(Kissling, MammalDIET2, MammalDIET2_supp, Y)
glimpse(Amphibio_C)
## Data corrected for taxonomy
IUCN_mammal_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_mammals.csv")
IUCN_amphibian_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_amphibians.csv")
IUCN_bird_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_birds.csv")
IUCN_reptile_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_reptiles.csv")
all <- rbind(IUCN_amphibian_C, IUCN_bird_C, IUCN_mammal_C, IUCN_reptile_C)
unique(all$Suitability)
unique(all$Habitat)
unique(all$Suitability)
X <- c("grid", "gridExtra", "ggpubr", "dplyr", "lattice", "stringr")
invisible(lapply(X, library, character.only=TRUE)); rm(X)
## Data corrected for taxonomy
IUCN_mammal_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_mammals.csv")
IUCN_amphibian_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_amphibians.csv")
IUCN_bird_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_birds.csv")
IUCN_reptile_C <- read.csv("../../../1.Trait_compilation/Results/0.Data_resolved_taxonomy/Processed_datasets/Traits/IUCN_habitat_reptiles.csv")
IUCN_amphibian_C$Best_guess_binomial %<>% as.character()
IUCN_mammal_C$Best_guess_binomial %<>% as.character()
IUCN_bird_C$Best_guess_binomial %<>% as.character()
IUCN_reptile_C$Best_guess_binomial %<>% as.character()
## Data uncorrected for taxonomy
IUCN_mammal_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Mammals_20180726.csv", sep=",")
IUCN_amphibian_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Amphibians_20180726.csv", sep=",")
IUCN_bird_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Birds_20180726.csv", sep=",")
IUCN_reptile_UN <- read.csv("../../Data/HabitatData_09_08_18_IUCN_unprocessed/API_HabitatLevel2_Reptiles_20180726.csv", sep=",")
colnames(IUCN_mammal_UN)[7] <- "Best_guess_binomial"
colnames(IUCN_amphibian_UN)[7] <- "Best_guess_binomial"
colnames(IUCN_reptile_UN)[7] <- "Best_guess_binomial"
colnames(IUCN_bird_UN)[7] <- "Best_guess_binomial"
IUCN_amphibian_UN$Best_guess_binomial %<>% as.character()
IUCN_mammal_UN$Best_guess_binomial %<>% as.character()
IUCN_bird_UN$Best_guess_binomial %<>% as.character()
IUCN_reptile_UN$Best_guess_binomial %<>% as.character()
## Amphibians
IUCN_amphibian_C %<>% .Set_H_type()
.Set_H_type <- function(IUCN_data) {
Func <- function(X) {
x <- strsplit(as.character(X), "[.]") %>% unlist
x <- x[1] %>% as.numeric(); return(x)}
IUCN_data$Code <- sapply(IUCN_data$code, Func)
IUCN_data <- IUCN_data %>% mutate(Affinity=ifelse(Code==1, "Forest",
ifelse(Code==2, "Savanna",
ifelse(Code==3, "Shrubland",
ifelse(Code==4, "Grassland",
ifelse(Code==5, "Wetland",
ifelse(Code==6, "Rocky areas",
ifelse(Code==7, "Caves and subterranean",
ifelse(Code==8, "Desert",
ifelse(Code==9|Code==10|Code==11, "Marine",
ifelse(Code==12|Code==13, "Marine intertidal or coastal/supratidal",
ifelse(Code==14|Code==15, "Artificial",
ifelse(Code==16, "Introduced vegetation",
ifelse(Code==17|Code==18, "Other/unknown", NA))))))))))))))
return(IUCN_data)
}
## Amphibians
IUCN_amphibian_C %<>% .Set_H_type()
View(IUCN_amphibian_C)
library(reshape)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(reshape)
source("Functions_for_results_congruence.R")
zsetwd("../../Code/2.Imputations/")
setwd("../../Code/2.Imputations")
source("Functions_for_results_congruence.R")
library(reshape)
library(ggplot2)
library(dplyr)
library(ggpubr)
library(reshape)
source("Functions_for_results_congruence.R")
GGPoptions <- theme_classic() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
Cattraits <- c("Trophic_level", "Diel_activity", "Specialisation", "Primary_diet")
## Functions to get and to plot imputation errors for categorical imputed traits: PFC
GetPFC <- function(Errors){
Cattraits <- c("Trophic_level", "Diel_activity", "Specialisation", "Primary_diet")
Y <- which(colnames(Errors) %in% paste(Cattraits, "PFC", sep=" "))
PFC <- Errors[,Y]*100
return(PFC)
}
PlotPFC <- function(PFCErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
PFC <- melt(PFCErrors)
PFC <- PFC %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
PFC$Max[15] <- NA
PFC$Min[15] <- NA
p <- ggplot(PFC, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("DA", "TL", "PD", "Sp")) +
geom_segment(aes(x=variable, xend=variable, y=PFC$Min, yend=PFC$Max, col=Class)) +
ylim(0,20) +
xlab("") + ylab("OOB % falsely classified") + coord_flip()
return(p)
}
## Functions to get and to plot imputation errors for continuous traits: MSE
GetrootMSE <- function(Errors){
Contraits <- c("Body_mass_g", "Longevity_d", "Litter_size", "Diet_breadth","Habitat_breadth_IUCN","Range_size_m2")
Y <- which(colnames(Errors) %in% paste(Contraits, "MSE", sep=" "))
Y <- Errors[,Y]
Y <- sqrt(Y)
Y[, "Body_mass_g MSE"] <- Y[, "Body_mass_g MSE"] / 1000  # in kg
Y[, "Longevity_d MSE"] <- Y[, "Longevity_d MSE"] / 365.25 # in years
Y[, "Range_size_m2 MSE"] <- Y[, "Range_size_m2 MSE"] / 1000000000000 # in Mega-meters
return(Y)
}
PlotMSE <- function(MSEErrors) {
GGPoptions <- theme_bw() + theme(
panel.border = element_rect(colour = "black", fill=NA),
text = element_text(size=13, family="serif"),
axis.text.x = element_text(color="black", margin=ggplot2::margin(10,0,2,0,"pt"), size=12),
axis.text.y = element_text(color="black", margin=ggplot2::margin(0,10,0,0,"pt"), size=12),
axis.ticks.length=unit(-0.1, "cm"),
legend.text=element_text(size=13))
MSE <- melt(MSEErrors)
MSE <- MSE %>% group_by(Class, variable) %>%
summarise(Mean=mean(value, na.rm=TRUE),
Max=max(value, na.rm = TRUE),
Min=min(value, na.rm = TRUE))
MSE$Max[23] <- NA
MSE$Min[23] <- NA
p <- ggplot(MSE, aes(variable, Mean, col=Class)) + GGPoptions +
geom_point() +
scale_x_discrete(labels=c("BM (kg)", "L (years)", "LCS", expression("RS (mega-m"^2*")"), "DB", "HB")) +
scale_y_continuous(labels=c(0.1,1,10,100,1000), breaks=c(0.1,1,10,100,1000), trans="log10") +
geom_segment(aes(x=variable, xend=variable, y=MSE$Min, yend=MSE$Max, col=Class)) +
xlab("") + ylab(expression(sqrt("OOB mean-square error"))) + coord_flip()
return(p)
}
# imputed with corrected phylogenies
Imputed <- readRDS("../../Results/2.Imputed_trait_datasets/Imputed_corrected_trees/List_of_8_sets.rds")
# imputed with original trees
Imputed_o <- readRDS("../../Results/2.Imputed_trait_datasets/Imputed_original_trees/List_of_8_sets.rds")
## Amphibians
Amphibians <- Get_all_results(Imputed, "A")$Errors
Errors_amp <- data.table::rbindlist(Amphibians)%>% as.data.frame()
## Reptiles
Reptiles <- Get_all_results(Imputed, "R")$Errors
Errors_rep <- data.table::rbindlist(Reptiles)%>% as.data.frame()
## Mammals
Mammals <- Get_all_results(Imputed, "M")$Errors
Errors_mam <- data.table::rbindlist(Mammals)%>% as.data.frame()
## Birds
Birds <- Get_all_results(Imputed, "B")$Errors
Errors_bir <- data.table::rbindlist(Birds)%>% as.data.frame()
Imputed <- Imputed[[8]]
View(Imputed)
